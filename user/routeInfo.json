{"path":"user","templateID":1,"sharedPropsHashes":{"apiList":"Z1TAV4B"},"localProps":{"reference":{"title":"ユーザー情報にアクセスする","slug":"user","description":"プレイヤー自身のユーザー情報や、他のプレイヤーのユーザー情報にアクセスできます。","order":26,"experimental":true,"recommendTheory":true,"contents":"<h2 id=\"-\">概要</h2>\n<p>RPGアツマールを使ったことのあるniconicoユーザーの情報を取得できる機能です。</p>\n<h3 id=\"-\">なにができるのか</h3>\n<p>次の3種類の取得方法を提供しています。</p>\n<ul>\n<li>現在ゲームをプレイしているログインユーザーのユーザー情報を取得</li>\n<li>ユーザーIDを指定して特定のユーザー情報を取得</li>\n<li>現在のゲームを最近プレイしたユーザーの情報の取得</li>\n</ul>\n<p>ただし、他人のユーザー情報を取得するには、そのユーザーが <a href=\"/common/interplayer\">プレイヤー間通信の有効化</a> を先にしている必要があります。</p>\n<h4 id=\"-\">利用想定／利用例</h4>\n<p>例えば、次のような利用を想定しています。</p>\n<ul>\n<li>プレイしているユーザーがログインしているかどうかを判別し、他のログイン必須APIを呼び出せるか事前に調べる</li>\n<li>idを指定したユーザーの情報を取得し、フレンド機能を実装する</li>\n<li>最近プレイしたユーザーの情報を取得し、すれちがい通信のような機能を実装する</li>\n</ul>\n<p>例えば、次のサンプルゲームではこの機能を利用し、フォームに入力されたuseridのユーザー情報を表示しています。ただし、<a href=\"/common/interplayer\">プレイヤー間通信の有効化</a>が必要なため、このゲームをプレイしたことがあるユーザーの情報のみになります。</p>\n<ul>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm9289\">【ゲームAPIサンプル】ユーザー情報取得できるくん（ユーザー情報取得API）</a><ul>\n<li><a href=\"/download/sample-projects#getUserInformation\">プロジェクトファイルダウンロードはこちら</a></li>\n</ul>\n</li>\n</ul>\n<p>また、こちらのサンプルでは、最近プレイしたユーザーの情報を利用しています。</p>\n<ul>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm9291\">【ゲームAPIサンプル】AsyncProfile（ユーザー情報取得API・共有セーブAPI）</a><ul>\n<li><a href=\"/download/sample-projects#AsyncProfile\">プロジェクトファイルダウンロードはこちら</a></li>\n</ul>\n</li>\n<li><a href=\"https://game.nicovideo.jp/atsumaru/games/gm9294\">【ゲームAPIサンプル】スライムバトラー（ユーザーシグナルAPI・共有セーブAPI）</a><ul>\n<li><a href=\"/download/sample-projects#SlimeBattler\">プロジェクトファイルダウンロードはこちら</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-\">利用方法</h2>\n<ul>\n<li>本機能は次の方法で利用できます。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">方法</th>\n<th align=\"left\">場所</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">公式プラグイン</td>\n<td align=\"left\"><ul><li><a href=\"https://github.com/atsumaru/mv-plugins/blob/master/plugins/AtsumaruGetSelfInformationExperimental.js\">現在ゲームをプレイしているログインユーザーのユーザー情報を取得</a></li><li><a href=\"https://github.com/atsumaru/mv-plugins/blob/master/plugins/AtsumaruGetUserInformationExperimental.js\">ユーザーIDを指定して特定のユーザー情報を取得</a></li><li><a href=\"https://github.com/atsumaru/mv-plugins/blob/master/plugins/AtsumaruGetRecentUsersExperimental.js\">現在のゲームを最近プレイしたユーザーの情報の取得</a></li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">ゲームAPI</td>\n<td align=\"left\">以下の「APIでの利用方法」を参考に、直接APIを呼び出してください</td>\n</tr>\n</tbody></table>\n<h3 id=\"-\">公式プラグインの利用方法</h3>\n<h4 id=\"-\">現在ゲームをプレイしているログインユーザーのユーザー情報を取得</h4>\n<h5 id=\"-\">プラグイン設置方法</h5>\n<ol>\n<li>プロジェクトのプラグインフォルダに <a href=\"https://raw.githubusercontent.com/atsumaru/mv-plugins/master/plugins/AtsumaruGetSelfInformationExperimental.js\">AtsumaruGetSelfInformationExperimental.js</a> を右クリックし「保存」して設置。</li>\n<li>プロジェクトのプラグイン設定で <code>AtsumaruGetSelfInformationExperimental</code> プラグインをONにする。</li>\n<li>プラグイン設定画面で、取得したユーザー情報の収納先変数を設定する。</li>\n</ol>\n<h5 id=\"-\">利用方法</h5>\n<p>プラグインコマンドは次のいずれかのように指定します。（どちらでも動作は同じです）</p>\n<pre><code>GetSelfInformation\nプレイヤー取得</code></pre><h4 id=\"-id-\">ユーザーIDを指定して特定のユーザー情報を取得</h4>\n<h5 id=\"-\">プラグイン設置方法</h5>\n<ol>\n<li>プロジェクトのプラグインフォルダに <a href=\"https://raw.githubusercontent.com/atsumaru/mv-plugins/master/plugins/AtsumaruGetUserInformationExperimental.js\">AtsumaruGetUserInformationExperimental.js</a> を右クリックし「保存」して設置。</li>\n<li>プロジェクトのプラグイン設定で <code>AtsumaruGetUserInformationExperimental</code> プラグインをONにする。</li>\n<li>プラグイン設定画面で、取得したユーザー情報の収納先変数を設定する。</li>\n</ol>\n<h5 id=\"-\">利用方法</h5>\n<p>プラグインコマンドは次のいずれかのように指定します。（どちらでも動作は同じです）</p>\n<pre><code>GetUserInformation &lt;userIdVariableId&gt;\n特定ユーザー取得 &lt;userIdVariableId&gt;</code></pre><h4 id=\"-\">現在のゲームを最近プレイしたユーザーの情報の取得</h4>\n<h5 id=\"-\">プラグイン設置方法</h5>\n<ol>\n<li>プロジェクトのプラグインフォルダに <a href=\"https://raw.githubusercontent.com/atsumaru/mv-plugins/master/plugins/AtsumaruGetRecentUsersExperimental.js\">AtsumaruGetRecentUsersExperimental.js</a> を右クリックし「保存」して設置</li>\n<li>プロジェクトのプラグイン設定で <code>AtsumaruGetRecentUsersExperimental</code> プラグインをONにする。</li>\n<li>プラグイン設定画面で、取得したユーザー情報を収納する変数のIDを指定する。</li>\n</ol>\n<h5 id=\"-\">利用方法</h5>\n<p>プラグインコマンドは次のいずれかのように指定します。（どちらでも動作は同じです）</p>\n<pre><code>GetRecentUsers\n最新ユーザー取得</code></pre><h3 id=\"api-\">APIでの利用方法</h3>\n<p>APIを利用したユーザー情報へのアクセス方法についてです。</p>\n<h4 id=\"-\">現在ゲームをプレイしているログインユーザーのユーザー情報を取得</h4>\n<ul>\n<li>現在のユーザーの情報を取得します。</li>\n<li>指定したユーザーがプレミアム会員かどうかも取得できます。</li>\n<li>プレイしているユーザーが<a href=\"/common/login\">ログイン</a>している必要があります。ログインしてない場合にエラーを返すため、それでユーザーのログイン状態を判別することができます。</li>\n<li>このAPIは<a href=\"/common/rate-limit\">APIの呼び出し回数制限</a>の対象です。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.user.getSelfInformation()</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">なし</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;SelfInformation&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n</tbody></table>\n<h5 id=\"-selfinformation-\">戻り値の型 SelfInformation について</h5>\n<p>戻り値で取得できる <code>SelfInformation</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">interface SelfInformation {\n  id: number;\n  name: string;\n  isPremium: boolean;\n  profile: string;\n  twitterId: string;\n  url: string;\n}</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ名</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">id</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">ユーザーのニコニコユーザーID</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーの名前</td>\n</tr>\n<tr>\n<td align=\"left\">isPremium</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\">ユーザーがニコニコのプレミアム会員かどうか</td>\n</tr>\n<tr>\n<td align=\"left\">profile</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのプロフィール文</td>\n</tr>\n<tr>\n<td align=\"left\">twitterId</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのtwitterId</td>\n</tr>\n<tr>\n<td align=\"left\">url</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのサイトURL</td>\n</tr>\n</tbody></table>\n<h5 id=\"-\">戻り値の例</h5>\n<pre><code class=\"language-js\">// window.RPGAtsumaru.experimental.user.getSelfInformation().then(function(v) { console.log(v) }) を実行\n{\n  id: 64341294,\n  name: &quot;RPGアツマール公式&quot;,\n  profile: &quot;やあ！ 僕はアツマライオン！\\nみんなでゲームを作って遊んで楽しもうよ！&quot;,\n  twitterId: &quot;nico_indiesgame&quot;,\n  url: &quot;https://game.nicovideo.jp/atsumaru/&quot;,\n  isPremium: false\n}</code></pre>\n<h5 id=\"-\">起こりうるエラーの種類</h5>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名前</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"/common/errors\">UNAUTHORIZED</a></td>\n<td align=\"left\">プレイヤーがログインしていない</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">INTERNAL_SERVER_ERROR</a></td>\n<td align=\"left\">RPGアツマールのサービス側で何らかの問題が発生しているか、または通信に失敗した</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">API_CALL_LIMIT_EXCEEDED</a></td>\n<td align=\"left\">短時間にゲームAPIを利用しすぎて、一時的に利用を制限されている</td>\n</tr>\n</tbody></table>\n<h4 id=\"-id-\">ユーザーIDを指定して特定のユーザー情報を取得</h4>\n<ul>\n<li>引数でユーザーIDを指定し、指定したユーザーの情報を取得します。</li>\n<li>指定したIDのユーザーが<a href=\"/common/interplayer\">プレイヤー間通信の有効化</a>をしている必要があります。</li>\n<li>このAPIは<a href=\"/common/rate-limit\">APIの呼び出し回数制限</a>の対象です。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.user.getUserInformation(userId: number)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">引数</td>\n<td align=\"left\"><code>userId</code> : ユーザー情報を取得したいユーザーのニコニコユーザーIDを自然数で指定します。</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;UserInformation&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n</tbody></table>\n<h5 id=\"-userinformation-\">戻り値の型 UserInformation について</h5>\n<p>戻り値で取得できる <code>UserInformation</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">interface UserInformation {\n  id: number;\n  name: string;\n  profile: string;\n  twitterId: string;\n  url: string;\n}</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ名</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">id</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">ユーザーのニコニコユーザーID</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーの名前</td>\n</tr>\n<tr>\n<td align=\"left\">profile</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのプロフィール文</td>\n</tr>\n<tr>\n<td align=\"left\">twitterId</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのtwitterId</td>\n</tr>\n<tr>\n<td align=\"left\">url</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーのサイトURL</td>\n</tr>\n</tbody></table>\n<h5 id=\"-\">戻り値の例</h5>\n<pre><code class=\"language-js\">// window.RPGAtsumaru.experimental.user.getUserInformation(64341294).then(function(v) { console.log(v) }) を実行\n{\n  id: 64341294,\n  name: &quot;RPGアツマール公式&quot;,\n  profile: &quot;やあ！ 僕はアツマライオン！\\nみんなでゲームを作って遊んで楽しもうよ！&quot;,\n  twitterId: &quot;nico_indiesgame&quot;,\n  url: &quot;https://game.nicovideo.jp/atsumaru/&quot;\n}</code></pre>\n<h5 id=\"-\">起こりうるエラーの種類</h5>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名前</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"/common/errors\">FORBIDDEN</a></td>\n<td align=\"left\"><code>userId</code> に<a href=\"/common/interplayer\">プレイヤー間通信の有効化</a>を行っていないユーザーのIDを指定した</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">BAD_REQUEST</a></td>\n<td align=\"left\">引数として不正な値を指定している</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">INTERNAL_SERVER_ERROR</a></td>\n<td align=\"left\">RPGアツマールのサービス側で何らかの問題が発生しているか、または通信に失敗した</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">API_CALL_LIMIT_EXCEEDED</a></td>\n<td align=\"left\">短時間にゲームAPIを利用しすぎて、一時的に利用を制限されている</td>\n</tr>\n</tbody></table>\n<h4 id=\"-\">現在のゲームを最近プレイしたユーザーの情報の取得</h4>\n<ul>\n<li><a href=\"/common/interplayer\">プレイヤー間通信の有効化</a>をしているユーザーを、最近現在のゲームをプレイした順番に取得します。</li>\n<li>このAPIで取得できるユーザーは、 <a href=\"/common/interplayer\">プレイヤー間通信の有効化</a> を有効化しているユーザーのみです。<ul>\n<li>ゲーム内で有効に使うために、まずゲーム内で有効化APIを呼び出すようにすると良いでしょう。</li>\n</ul>\n</li>\n<li>このAPIは<a href=\"/common/rate-limit\">APIの呼び出し回数制限</a>の対象です。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.user.getRecentUsers()</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">なし</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;UserIdName[]&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/12/17</td>\n</tr>\n</tbody></table>\n<h5 id=\"-useridname-\">戻り値の型 UserIdName について</h5>\n<p>戻り値で取得できる <code>UserIdName</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">interface UserIdName {\n  id: number;\n  name: string;\n}</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ名</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">id</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">ユーザーのニコニコユーザーID</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ユーザーの名前</td>\n</tr>\n</tbody></table>\n<h5 id=\"-\">戻り値の例</h5>\n<pre><code class=\"language-js\">// window.RPGAtsumaru.experimental.user.getRecentUsers().then(function(v) { console.log(v) }) を実行\n[\n  {\n    id: 64341294,\n    name: &quot;RPGアツマール公式&quot;\n  },\n  {\n    id: 63008093,\n    name: &quot;ツクール開発部公式&quot;\n  }\n]</code></pre>\n<h5 id=\"-\">起こりうるエラーの種類</h5>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名前</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"/common/errors\">INTERNAL_SERVER_ERROR</a></td>\n<td align=\"left\">RPGアツマールのサービス側で何らかの問題が発生しているか、または通信に失敗した</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">API_CALL_LIMIT_EXCEEDED</a></td>\n<td align=\"left\">短時間にゲームAPIを利用しすぎて、一時的に利用を制限されている</td>\n</tr>\n</tbody></table>\n"},"title":"ユーザー情報にアクセスする","path":"/user"}}
