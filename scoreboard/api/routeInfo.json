{"path":"scoreboard/api","templateID":1,"sharedPropsHashes":{"apiList":"4XhWH"},"localProps":{"reference":{"title":"スコアボードAPIを利用する","slug":"scoreboard/api","description":"RPGアツマール ゲームAPIを使ったスコアボードの利用方法について解説します。","order":3,"experimental":true,"contents":"<h2 id=\"api-\">APIでの利用方法</h2>\n<p>APIを使ったスコアボードの利用方法についてです。</p>\n<h2 id=\"-\">スコアボードへの記録</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.scoreboards.setRecord(boardId: number, score: number)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">引数の <code>boardId</code> を指定することによりスコアを記録するスコアボードを指定。<br>第2引数のscoreでスコアを指定し、記録するスコアの点数を記録。</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\"><ul><li>スコアボードID(デフォルトは1〜10までの整数)</li><li>記録するスコアの点数。スコアの値としてRPGアツマールがサポートしている範囲は <code>-999,999,999,999,999</code> ～ <code>+999,999,999,999,999</code> です。</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;void&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/06/15</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/08/28</td>\n</tr>\n</tbody></table>\n<h3 id=\"-\">起こりうるエラーの種類</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名前</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"/common/errors\">BAD_REQUEST</a></td>\n<td align=\"left\"><ul><li><code>bordId</code> に<a href=\"/scoreboard/api\">スコアボード設定画面</a>で設定している範囲外の値を指定した</li><li>引数として不正な値を指定している</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">INTERNAL_SERVER_ERROR</a></td>\n<td align=\"left\">RPGアツマールのサービス側で何らかの問題が発生しているか、または通信に失敗した</td>\n</tr>\n</tbody></table>\n<h2 id=\"-\">スコアボードを表示する</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.scoreboards.display(boardId: number)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">引数の <code>boardId</code> を指定することによりスコアを記録するスコアボードを指定してスコアボード表示</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">スコアボードID(デフォルトは1〜10までの整数)</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;void&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/06/15</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/06/15</td>\n</tr>\n</tbody></table>\n<h2 id=\"-\">スコアボードからデータを読み込み</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">メソッド</th>\n<th align=\"left\"><code>window.RPGAtsumaru.experimental.scoreboards.getRecords(boardId: number)</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">説明</td>\n<td align=\"left\">引数の <code>boardId</code> を指定することによりスコアボードの情報を取得</td>\n</tr>\n<tr>\n<td align=\"left\">引数</td>\n<td align=\"left\">スコアボードID(デフォルトは1〜10までの整数)</td>\n</tr>\n<tr>\n<td align=\"left\">戻り値</td>\n<td align=\"left\"><code>Promise&lt;ScoreboardData&gt;</code></td>\n</tr>\n<tr>\n<td align=\"left\">リリース日</td>\n<td align=\"left\">2018/06/15</td>\n</tr>\n<tr>\n<td align=\"left\">更新日</td>\n<td align=\"left\">2018/06/15</td>\n</tr>\n</tbody></table>\n<h3 id=\"-scoreboarddata-\">戻り値の型 ScoreboardData について</h3>\n<p>戻り値で取得できる <code>ScoreboardData</code> は以下のような型です。</p>\n<pre><code class=\"language-js\">interface ScoreboardData {\n  myRecord: null | {\n    isNewRecord: boolean,\n    rank: number,\n    score: number\n  },\n  ranking: Array&lt;{\n    rank: number,\n    score: number,\n    userName: string,\n    userId: number\n  }&gt;,\n  myBestRecord: null | {\n    rank: number,\n    score: number,\n    userName: string,\n    userId: number\n  },\n  boardId: number,\n  boardName: string\n}</code></pre>\n<p>プロパティの内容は次のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">プロパティ名</th>\n<th align=\"left\">型</th>\n<th align=\"left\">内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">boardId</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">ボードID</td>\n</tr>\n<tr>\n<td align=\"left\">boardName</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">ボードの名前</td>\n</tr>\n<tr>\n<td align=\"left\">myRecord</td>\n<td align=\"left\"><code>object &amp;#124; null</code></td>\n<td align=\"left\">今回の自己レコード</td>\n</tr>\n<tr>\n<td align=\"left\">myRecord.rank</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">今回の自己レコードのランキング順位</td>\n</tr>\n<tr>\n<td align=\"left\">myRecord.score</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">今回の自己レコードのスコア</td>\n</tr>\n<tr>\n<td align=\"left\">myRecord.isNewRecord</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\">今回の自己レコードが自己新記録かどうか</td>\n</tr>\n<tr>\n<td align=\"left\">myBestRecord</td>\n<td align=\"left\"><code>object &amp;#124; null</code></td>\n<td align=\"left\">自己ベスト記録。ログインしていないと必ずnullになる</td>\n</tr>\n<tr>\n<td align=\"left\">myBestRecord.rank</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">自己ベスト記録のランキング順位</td>\n</tr>\n<tr>\n<td align=\"left\">myBestRecord.userName</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">自己ベスト記録のユーザ名</td>\n</tr>\n<tr>\n<td align=\"left\">myBestRecord.userId</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">自己ベスト記録のユーザーID</td>\n</tr>\n<tr>\n<td align=\"left\">myBestRecord.score</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">自己ベスト記録のスコア</td>\n</tr>\n<tr>\n<td align=\"left\">ranking</td>\n<td align=\"left\"><code>array</code></td>\n<td align=\"left\">ランキングデータ</td>\n</tr>\n<tr>\n<td align=\"left\">ranking.length</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">ランキングデータの長さ</td>\n</tr>\n<tr>\n<td align=\"left\">ranking[n].rank</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">n+1番目のランキング</td>\n</tr>\n<tr>\n<td align=\"left\">ranking[n].userName</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\">n+1番目のランクのユーザ名</td>\n</tr>\n<tr>\n<td align=\"left\">ranking[n].userId</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">n+1番目のランクのユーザーID</td>\n</tr>\n<tr>\n<td align=\"left\">ranking[n].score</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">n+1番目のランクのスコア</td>\n</tr>\n</tbody></table>\n<h3 id=\"-\">戻り値の例</h3>\n<pre><code class=\"language-js\">// window.RPGAtsumaru.experimental.scoreboards.getRecords(1).then(function(v) { console.log(v) }) を実行\n{\n  &quot;myRecord&quot;: {\n    &quot;isNewRecord&quot;: false,\n    &quot;rank&quot;: 5,\n    &quot;score&quot;: 0\n  },\n  &quot;ranking&quot;: [\n    {\n      &quot;rank&quot;: 1,\n      &quot;score&quot;: 1000,\n      &quot;userName&quot;: &quot;atsumalion&quot;,\n      &quot;userId&quot;: 123456\n    },\n    {\n      &quot;rank&quot;: 2,\n      &quot;score&quot;: 500,\n      &quot;userName&quot;: &quot;atsumatiger&quot;,\n      &quot;userId&quot;: 123457\n    },\n    {\n      &quot;rank&quot;: 3,\n      &quot;score&quot;: 100,\n      &quot;userName&quot;: &quot;atsumagorilla&quot;,\n      &quot;userId&quot;: 123458\n    }\n  ],\n  &quot;myBestRecord&quot;: {\n    &quot;rank&quot;: 1,\n    &quot;score&quot;: 1000,\n    &quot;userName&quot;: &quot;atsumalion&quot;,\n    &quot;userId&quot;: 123456\n  },\n  &quot;boardId&quot;: 1,\n  &quot;boardName&quot;: &quot;スコアボードの名前&quot;\n}</code></pre>\n<h3 id=\"-\">起こりうるエラーの種類</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">名前</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><a href=\"/common/errors\">BAD_REQUEST</a></td>\n<td align=\"left\"><ul><li><code>bordId</code> に<a href=\"/scoreboard/api\">スコアボード設定画面</a>で設定している範囲外の値を指定した</li><li>引数として不正な値を指定している</li></ul></td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"/common/errors\">INTERNAL_SERVER_ERROR</a></td>\n<td align=\"left\">RPGアツマールのサービス側で何らかの問題が発生しているか、または通信に失敗した</td>\n</tr>\n</tbody></table>\n"},"title":"スコアボードAPIを利用する","path":"/scoreboard/api"}}
